name: Android CI

on:
  push:
    branches: [ main ]

jobs:
  build_release:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Retrieve version
        run: |
          echo VERSION=$(echo ${{ github.event.head_commit.id }} | head -c 10) >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-deps
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-${{ github.sha }}
          restore-keys: gradle-builds
      - name: Build with Gradle
        env:
          REL_KEY: ${{ secrets.REL_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
        run: |
          bash ./gradlew assembleRelease
      - name: Rename
        run: |
          echo APK_FILE=${{ github.workspace }}/app/build/outputs/apk/release/BilibiliHD2_release_${{ env.VERSION }}.apk >> $GITHUB_ENV
          mv ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk ${{ github.workspace }}/app/build/outputs/apk/release/BilibiliHD2_release_${{ env.VERSION }}.apk
      - name: Upload built apk
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: BilibiliHD2_release_${{ env.VERSION }}.apk
          path: ${{ env.APK_FILE }}
      - name: Upload mapping.txt to GitHub
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: mapping.txt
          path: ${{ github.workspace }}/app/build/outputs/mapping/release/mapping.txt
      - name: Upload to JianGuonYun
        run: curl -T ${{ env.APK_FILE }} --user "${{ secrets.JG_USN }}:${{ secrets.JG_PSW }}" "https://dav.jianguoyun.com/dav/BilibiliHD2/"
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Publish to LanZou
        env:
          LZ_YLOGIN: ${{ secrets.LZ_YLOGIN }}
          LZ_PHPDISK_INFO: ${{ secrets.LZ_PHPDISK_INFO }}
        run: |
          pip3 install lanzou-api --upgrade
          python3 script/upload_to_lanzou.py ${{ env.APK_FILE }}
#      - name: Setup appcenter-cli
#        run: |
#          npm install -g appcenter-cli
#      - name: Upload mapping.txt to AppCenter


  build_debug:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Retrieve version
        run: |
          echo VERSION=$(echo ${{ github.event.head_commit.id }} | head -c 10) >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-deps
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-${{ github.sha }}
          restore-keys: gradle-builds
      - name: Build with Gradle
        env:
          REL_KEY: ${{ secrets.REL_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
        run: |
          bash ./gradlew assembleDebug
      - name: Upload built apk
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: BilibiliHD2_debug_${{ env.VERSION }}.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
      - name: Upload to JianGuonYun
        run: curl -T ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk --user "${{ secrets.JG_USN }}:${{ secrets.JG_PSW }}" "https://dav.jianguoyun.com/dav/BilibiliHD2/"
